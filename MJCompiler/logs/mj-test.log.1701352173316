INFO  14:42:49,235 - Compiling source file: C:\Users\sofij\Documents\Faks\7semestar\pp1\Projekat\Projekat final\workspace\MJCompiler\test\primerSaSajta.mj
INFO  14:42:49,270 - #2 program
INFO  14:42:49,270 - #15 p
INFO  14:42:49,271 - #22 const
INFO  14:42:49,271 - #15 int
INFO  14:42:49,271 - #15 size
INFO  14:42:49,271 - #21 =
INFO  14:42:49,272 - #18 10
INFO  14:42:49,272 - #5 ;
INFO  14:42:49,272 - #25 class
INFO  14:42:49,273 - #15 Table
INFO  14:42:49,273 - #3 {
INFO  14:42:49,273 - #15 int
INFO  14:42:49,273 - #15 pos
INFO  14:42:49,273 - #23 [
INFO  14:42:49,274 - #24 ]
INFO  14:42:49,274 - #11 ,
INFO  14:42:49,274 - #15 neg
INFO  14:42:49,274 - #23 [
INFO  14:42:49,274 - #24 ]
INFO  14:42:49,275 - #11 ,
INFO  14:42:49,275 - #15 factor
INFO  14:42:49,276 - #5 ;
INFO  14:42:49,276 - #3 {
INFO  14:42:49,276 - #15 Table
INFO  14:42:49,276 - #6 (
INFO  14:42:49,276 - #15 int
INFO  14:42:49,277 - #15 factor
INFO  14:42:49,277 - #7 )
INFO  14:42:49,277 - #3 {
INFO  14:42:49,277 - #15 this
INFO  14:42:49,277 - #35 .
INFO  14:42:49,278 - #15 factor
INFO  14:42:49,278 - #21 =
INFO  14:42:49,278 - #15 factor
INFO  14:42:49,278 - #5 ;
INFO  14:42:49,279 - #4 }
INFO  14:42:49,280 - #13 void
INFO  14:42:49,280 - #15 putp
INFO  14:42:49,280 - #6 (
INFO  14:42:49,280 - #15 int
INFO  14:42:49,280 - #15 a
INFO  14:42:49,280 - #11 ,
INFO  14:42:49,281 - #15 int
INFO  14:42:49,281 - #15 idx
INFO  14:42:49,281 - #7 )
INFO  14:42:49,281 - #3 {
INFO  14:42:49,281 - #15 this
INFO  14:42:49,281 - #35 .
INFO  14:42:49,282 - #15 pos
INFO  14:42:49,282 - #23 [
INFO  14:42:49,282 - #15 idx
INFO  14:42:49,282 - #24 ]
INFO  14:42:49,283 - #21 =
INFO  14:42:49,283 - #15 a
INFO  14:42:49,283 - #5 ;
INFO  14:42:49,283 - #4 }
INFO  14:42:49,283 - #13 void
INFO  14:42:49,283 - #15 putn
INFO  14:42:49,283 - #6 (
INFO  14:42:49,284 - #15 int
INFO  14:42:49,284 - #15 a
INFO  14:42:49,284 - #11 ,
INFO  14:42:49,284 - #15 int
INFO  14:42:49,284 - #15 idx
INFO  14:42:49,284 - #7 )
INFO  14:42:49,284 - #3 {
INFO  14:42:49,285 - #15 this
INFO  14:42:49,285 - #35 .
INFO  14:42:49,285 - #15 neg
INFO  14:42:49,285 - #23 [
INFO  14:42:49,285 - #15 idx
INFO  14:42:49,285 - #24 ]
INFO  14:42:49,286 - #21 =
INFO  14:42:49,286 - #15 a
INFO  14:42:49,286 - #5 ;
INFO  14:42:49,286 - #4 }
INFO  14:42:49,286 - #15 int
INFO  14:42:49,286 - #15 getp
INFO  14:42:49,286 - #6 (
INFO  14:42:49,286 - #15 int
INFO  14:42:49,287 - #15 idx
INFO  14:42:49,287 - #7 )
INFO  14:42:49,287 - #3 {
INFO  14:42:49,287 - #9 return
INFO  14:42:49,287 - #15 pos
INFO  14:42:49,287 - #23 [
INFO  14:42:49,287 - #15 idx
INFO  14:42:49,287 - #24 ]
INFO  14:42:49,287 - #5 ;
INFO  14:42:49,288 - #4 }
INFO  14:42:49,288 - #15 int
INFO  14:42:49,288 - #15 getn
INFO  14:42:49,288 - #6 (
INFO  14:42:49,288 - #15 int
INFO  14:42:49,288 - #15 idx
INFO  14:42:49,289 - #7 )
INFO  14:42:49,289 - #3 {
INFO  14:42:49,289 - #9 return
INFO  14:42:49,289 - #15 neg
INFO  14:42:49,289 - #23 [
INFO  14:42:49,289 - #15 idx
INFO  14:42:49,289 - #24 ]
INFO  14:42:49,289 - #5 ;
INFO  14:42:49,290 - #4 }
INFO  14:42:49,290 - #4 }
INFO  14:42:49,290 - #4 }
INFO  14:42:49,290 - #15 Table
INFO  14:42:49,291 - #15 val
INFO  14:42:49,291 - #5 ;
INFO  14:42:49,291 - #15 Int
INFO  14:42:49,291 - #15 rows
INFO  14:42:49,292 - #11 ,
INFO  14:42:49,292 - #15 columns
INFO  14:42:49,292 - #5 ;
INFO  14:42:49,292 - #3 {
INFO  14:42:49,292 - #13 void
INFO  14:42:49,292 - #15 f
INFO  14:42:49,292 - #6 (
INFO  14:42:49,292 - #15 char
INFO  14:42:49,293 - #15 ch
INFO  14:42:49,293 - #11 ,
INFO  14:42:49,293 - #15 int
INFO  14:42:49,293 - #15 a
INFO  14:42:49,293 - #11 ,
INFO  14:42:49,293 - #15 int
INFO  14:42:49,293 - #15 arg
INFO  14:42:49,293 - #7 )
INFO  14:42:49,294 - #15 int
INFO  14:42:49,294 - #15 x
INFO  14:42:49,294 - #5 ;
INFO  14:42:49,294 - #3 {
INFO  14:42:49,294 - #15 x
INFO  14:42:49,294 - #21 =
INFO  14:42:49,294 - #15 arg
INFO  14:42:49,294 - #5 ;
INFO  14:42:49,295 - #4 }
INFO  14:42:49,295 - #13 void
INFO  14:42:49,295 - #15 main
INFO  14:42:49,295 - #6 (
INFO  14:42:49,295 - #7 )
INFO  14:42:49,295 - #15 int
INFO  14:42:49,295 - #15 x
INFO  14:42:49,296 - #11 ,
INFO  14:42:49,296 - #15 i
INFO  14:42:49,296 - #5 ;
INFO  14:42:49,296 - #15 char
INFO  14:42:49,296 - #15 c
INFO  14:42:49,296 - #11 ,
INFO  14:42:49,296 - #15 int
INFO  14:42:49,296 - #15 arr
INFO  14:42:49,296 - #23 [
INFO  14:42:49,296 - #24 ]
INFO  14:42:49,297 - #5 ;
INFO  14:42:49,297 - #3 {
INFO  14:42:49,297 - #15 val
INFO  14:42:49,297 - #21 =
INFO  14:42:49,297 - #15 new
INFO  14:42:49,297 - #15 Table
INFO  14:42:49,297 - #6 (
INFO  14:42:49,297 - #18 2
INFO  14:42:49,297 - #7 )
INFO  14:42:49,298 - #5 ;
INFO  14:42:49,298 - #15 arr
INFO  14:42:49,298 - #21 =
INFO  14:42:49,300 - #15 new
INFO  14:42:49,301 - #15 int
INFO  14:42:49,301 - #23 [
INFO  14:42:49,301 - #18 3
INFO  14:42:49,301 - #24 ]
INFO  14:42:49,301 - #5 ;
INFO  14:42:49,301 - #15 i
INFO  14:42:49,302 - #21 =
INFO  14:42:49,302 - #18 0
INFO  14:42:49,302 - #5 ;
INFO  14:42:49,302 - #30 while
INFO  14:42:49,302 - #6 (
INFO  14:42:49,302 - #15 i
INFO  14:42:49,302 - #40 <
INFO  14:42:49,302 - #18 3
INFO  14:42:49,303 - #7 )
INFO  14:42:49,303 - #3 {
INFO  14:42:49,303 - #15 arr
INFO  14:42:49,303 - #23 [
INFO  14:42:49,303 - #15 i
INFO  14:42:49,303 - #24 ]
INFO  14:42:49,303 - #21 =
INFO  14:42:49,303 - #15 i
INFO  14:42:49,304 - #5 ;
INFO  14:42:49,304 - #15 i
INFO  14:42:49,304 - #45 ++
INFO  14:42:49,304 - #5 ;
INFO  14:42:49,305 - #4 }
INFO  14:42:49,305 - #15 arr
INFO  14:42:49,305 - #35 .
INFO  14:42:49,305 - #49 foreach
INFO  14:42:49,305 - #6 (
INFO  14:42:49,305 - #15 x
INFO  14:42:49,306 - #48 =>
INFO  14:42:49,306 - #12 print
INFO  14:42:49,306 - #6 (
INFO  14:42:49,307 - #15 x
INFO  14:42:49,307 - #7 )
INFO  14:42:49,307 - #5 ;
INFO  14:42:49,307 - #7 )
INFO  14:42:49,307 - #5 ;
INFO  14:42:49,307 - #15 val
INFO  14:42:49,308 - #35 .
INFO  14:42:49,308 - #15 pos
INFO  14:42:49,308 - #21 =
INFO  14:42:49,308 - #15 new
INFO  14:42:49,309 - #15 int
INFO  14:42:49,309 - #23 [
INFO  14:42:49,309 - #15 size
INFO  14:42:49,310 - #24 ]
INFO  14:42:49,310 - #5 ;
INFO  14:42:49,310 - #15 val
INFO  14:42:49,310 - #35 .
INFO  14:42:49,310 - #15 neg
INFO  14:42:49,310 - #21 =
INFO  14:42:49,311 - #15 new
INFO  14:42:49,311 - #15 int
INFO  14:42:49,311 - #23 [
INFO  14:42:49,311 - #15 size
INFO  14:42:49,312 - #24 ]
INFO  14:42:49,312 - #5 ;
INFO  14:42:49,312 - #27 read
INFO  14:42:49,312 - #6 (
INFO  14:42:49,312 - #15 x
INFO  14:42:49,312 - #7 )
INFO  14:42:49,312 - #5 ;
INFO  14:42:49,312 - #23 [
INFO  14:42:49,312 - #15 i
INFO  14:42:49,313 - #11 ,
INFO  14:42:49,313 - #11 ,
INFO  14:42:49,313 - #15 x
INFO  14:42:49,313 - #24 ]
INFO  14:42:49,313 - #21 =
INFO  14:42:49,313 - #15 arr
INFO  14:42:49,313 - #5 ;
INFO  14:42:49,313 - #30 while
INFO  14:42:49,313 - #6 (
INFO  14:42:49,313 - #15 i
INFO  14:42:49,313 - #40 <
INFO  14:42:49,313 - #15 size
INFO  14:42:49,314 - #7 )
INFO  14:42:49,314 - #3 {
INFO  14:42:49,314 - #15 val
INFO  14:42:49,314 - #35 .
INFO  14:42:49,314 - #15 putp
INFO  14:42:49,314 - #6 (
INFO  14:42:49,314 - #18 0
INFO  14:42:49,314 - #11 ,
INFO  14:42:49,314 - #15 i
INFO  14:42:49,315 - #7 )
INFO  14:42:49,315 - #5 ;
INFO  14:42:49,315 - #15 val
INFO  14:42:49,315 - #35 .
INFO  14:42:49,315 - #15 putn
INFO  14:42:49,315 - #6 (
INFO  14:42:49,315 - #18 0
INFO  14:42:49,316 - #11 ,
INFO  14:42:49,316 - #15 i
INFO  14:42:49,316 - #7 )
INFO  14:42:49,316 - #5 ;
INFO  14:42:49,316 - #15 i
INFO  14:42:49,316 - #45 ++
INFO  14:42:49,316 - #5 ;
INFO  14:42:49,316 - #4 }
INFO  14:42:49,316 - #15 f
INFO  14:42:49,316 - #6 (
INFO  14:42:49,316 - #15 c
INFO  14:42:49,317 - #11 ,
INFO  14:42:49,317 - #15 x
INFO  14:42:49,317 - #11 ,
INFO  14:42:49,317 - #15 i
INFO  14:42:49,317 - #7 )
INFO  14:42:49,317 - #5 ;
INFO  14:42:49,317 - #27 read
INFO  14:42:49,317 - #6 (
INFO  14:42:49,317 - #15 rows
INFO  14:42:49,317 - #7 )
INFO  14:42:49,318 - #5 ;
INFO  14:42:49,318 - #15 x
INFO  14:42:49,318 - #21 =
INFO  14:42:49,318 - #15 rows
INFO  14:42:49,318 - #5 ;
INFO  14:42:49,319 - #30 while
INFO  14:42:49,319 - #6 (
INFO  14:42:49,319 - #20 true
INFO  14:42:49,319 - #7 )
INFO  14:42:49,320 - #3 {
INFO  14:42:49,320 - #16 if
INFO  14:42:49,320 - #6 (
INFO  14:42:49,321 - #15 x
INFO  14:42:49,323 - #41 <=
INFO  14:42:49,323 - #18 0
INFO  14:42:49,323 - #7 )
INFO  14:42:49,324 - #29 break
INFO  14:42:49,324 - #5 ;
INFO  14:42:49,324 - #16 if
INFO  14:42:49,324 - #6 (
INFO  14:42:49,324 - #18 0
INFO  14:42:49,324 - #41 <=
INFO  14:42:49,324 - #15 x
INFO  14:42:49,325 - #32 &&
INFO  14:42:49,325 - #15 x
INFO  14:42:49,325 - #40 <
INFO  14:42:49,325 - #15 size
INFO  14:42:49,325 - #7 )
INFO  14:42:49,325 - #3 {
INFO  14:42:49,325 - #15 val
INFO  14:42:49,325 - #35 .
INFO  14:42:49,325 - #15 putp
INFO  14:42:49,325 - #6 (
INFO  14:42:49,325 - #15 val
INFO  14:42:49,326 - #35 .
INFO  14:42:49,326 - #15 getp
INFO  14:42:49,326 - #6 (
INFO  14:42:49,326 - #15 x
INFO  14:42:49,329 - #7 )
INFO  14:42:49,331 - #10 +
INFO  14:42:49,331 - #18 1
INFO  14:42:49,331 - #7 )
INFO  14:42:49,331 - #5 ;
INFO  14:42:49,331 - #4 }
INFO  14:42:49,331 - #17 else
INFO  14:42:49,331 - #16 if
INFO  14:42:49,331 - #6 (
INFO  14:42:49,332 - #33 -
INFO  14:42:49,332 - #15 size
INFO  14:42:49,332 - #40 <
INFO  14:42:49,332 - #15 x
INFO  14:42:49,333 - #32 &&
INFO  14:42:49,334 - #15 x
INFO  14:42:49,334 - #40 <
INFO  14:42:49,334 - #18 0
INFO  14:42:49,334 - #7 )
INFO  14:42:49,334 - #3 {
INFO  14:42:49,335 - #15 val
INFO  14:42:49,335 - #35 .
INFO  14:42:49,335 - #15 putn
INFO  14:42:49,335 - #6 (
INFO  14:42:49,335 - #15 val
INFO  14:42:49,335 - #35 .
INFO  14:42:49,335 - #15 getn
INFO  14:42:49,335 - #6 (
INFO  14:42:49,335 - #33 -
INFO  14:42:49,335 - #15 x
INFO  14:42:49,335 - #7 )
INFO  14:42:49,335 - #10 +
INFO  14:42:49,336 - #18 1
INFO  14:42:49,337 - #7 )
INFO  14:42:49,337 - #5 ;
INFO  14:42:49,337 - #4 }
INFO  14:42:49,337 - #27 read
INFO  14:42:49,337 - #6 (
INFO  14:42:49,337 - #15 x
INFO  14:42:49,337 - #7 )
INFO  14:42:49,338 - #5 ;
INFO  14:42:49,338 - #4 }
INFO  14:42:49,339 - #4 }
INFO  14:42:49,341 - #4 }
