INFO  16:11:48,707 - Compiling source file: C:\Users\sofij\Documents\Faks\7semestar\pp1\Projekat\Projekat 20232024\Domaci\workspace\MJCompiler\test\test1.mj
INFO  16:11:48,884 - #2 program
INFO  16:11:48,884 - #53 MJProgram
INFO  16:11:48,885 - #48 namespace
INFO  16:11:48,886 - #53 sizes
INFO  16:11:48,887 - #3 {
INFO  16:11:48,887 - #21 const
INFO  16:11:48,888 - #53 int
INFO  16:11:48,888 - #53 tableSize
INFO  16:11:48,889 - #20 =
INFO  16:11:48,889 - #17 10
INFO  16:11:48,889 - #5 ;
INFO  16:11:48,890 - #3 {
INFO  16:11:48,891 - #4 }
INFO  16:11:48,893 - #4 }
INFO  16:11:48,893 - #24 class
INFO  16:11:48,893 - #53 Table
INFO  16:11:48,894 - #3 {
INFO  16:11:48,895 - #53 int
INFO  16:11:48,896 - #53 pos
INFO  16:11:48,897 - #22 [
INFO  16:11:48,897 - #23 ]
INFO  16:11:48,897 - #11 ,
INFO  16:11:48,898 - #53 neg
INFO  16:11:48,898 - #22 [
INFO  16:11:48,898 - #23 ]
INFO  16:11:48,898 - #11 ,
INFO  16:11:48,898 - #53 factor
INFO  16:11:48,898 - #5 ;
INFO  16:11:48,898 - #3 {
INFO  16:11:48,900 - #13 void
INFO  16:11:48,900 - #53 setfactor
INFO  16:11:48,901 - #6 (
INFO  16:11:48,902 - #53 int
INFO  16:11:48,902 - #53 factor
INFO  16:11:48,902 - #7 )
INFO  16:11:48,903 - #3 {
INFO  16:11:48,903 - #53 this
INFO  16:11:48,904 - #34 .
INFO  16:11:48,905 - #53 factor
INFO  16:11:48,906 - #20 =
INFO  16:11:48,906 - #53 factor
INFO  16:11:48,907 - #5 ;
INFO  16:11:48,908 - #4 }
INFO  16:11:48,909 - #13 void
INFO  16:11:48,910 - #53 putp
INFO  16:11:48,910 - #6 (
INFO  16:11:48,910 - #53 int
INFO  16:11:48,910 - #53 a
INFO  16:11:48,911 - #11 ,
INFO  16:11:48,911 - #53 int
INFO  16:11:48,911 - #53 idx
INFO  16:11:48,911 - #7 )
INFO  16:11:48,911 - #3 {
INFO  16:11:48,911 - #53 this
INFO  16:11:48,911 - #34 .
INFO  16:11:48,911 - #53 pos
INFO  16:11:48,911 - #22 [
INFO  16:11:48,912 - #53 idx
INFO  16:11:48,912 - #23 ]
INFO  16:11:48,912 - #20 =
INFO  16:11:48,912 - #53 a
INFO  16:11:48,912 - #5 ;
INFO  16:11:48,912 - #4 }
INFO  16:11:48,912 - #13 void
INFO  16:11:48,912 - #53 putn
INFO  16:11:48,912 - #6 (
INFO  16:11:48,913 - #53 int
INFO  16:11:48,913 - #53 a
INFO  16:11:48,913 - #11 ,
INFO  16:11:48,913 - #53 int
INFO  16:11:48,913 - #53 idx
INFO  16:11:48,913 - #7 )
INFO  16:11:48,913 - #3 {
INFO  16:11:48,913 - #53 this
INFO  16:11:48,913 - #34 .
INFO  16:11:48,913 - #53 neg
INFO  16:11:48,913 - #22 [
INFO  16:11:48,913 - #53 idx
INFO  16:11:48,914 - #23 ]
INFO  16:11:48,914 - #20 =
INFO  16:11:48,914 - #53 a
INFO  16:11:48,914 - #5 ;
INFO  16:11:48,914 - #4 }
INFO  16:11:48,914 - #53 int
INFO  16:11:48,914 - #53 getp
INFO  16:11:48,914 - #6 (
INFO  16:11:48,914 - #53 int
INFO  16:11:48,915 - #53 idx
INFO  16:11:48,915 - #7 )
INFO  16:11:48,915 - #3 {
INFO  16:11:48,915 - #9 return
INFO  16:11:48,915 - #53 pos
INFO  16:11:48,915 - #22 [
INFO  16:11:48,915 - #53 idx
INFO  16:11:48,915 - #23 ]
INFO  16:11:48,915 - #5 ;
INFO  16:11:48,915 - #4 }
INFO  16:11:48,916 - #53 int
INFO  16:11:48,916 - #53 getn
INFO  16:11:48,916 - #6 (
INFO  16:11:48,916 - #53 int
INFO  16:11:48,916 - #53 idx
INFO  16:11:48,916 - #7 )
INFO  16:11:48,916 - #3 {
INFO  16:11:48,916 - #9 return
INFO  16:11:48,916 - #53 neg
INFO  16:11:48,916 - #22 [
INFO  16:11:48,916 - #53 idx
INFO  16:11:48,916 - #23 ]
INFO  16:11:48,917 - #5 ;
INFO  16:11:48,917 - #4 }
INFO  16:11:48,917 - #4 }
INFO  16:11:48,917 - #4 }
INFO  16:11:48,917 - #53 int
INFO  16:11:48,917 - #53 x
INFO  16:11:48,917 - #5 ;
INFO  16:11:48,917 - #53 int
INFO  16:11:48,918 - #53 y
INFO  16:11:48,918 - #5 ;
INFO  16:11:48,918 - #53 int
INFO  16:11:48,918 - #53 rows
INFO  16:11:48,918 - #11 ,
INFO  16:11:48,918 - #53 columns
INFO  16:11:48,918 - #5 ;
INFO  16:11:48,918 - #3 {
INFO  16:11:48,918 - #13 void
INFO  16:11:48,918 - #53 setfactor
INFO  16:11:48,918 - #6 (
INFO  16:11:48,919 - #53 int
INFO  16:11:48,919 - #53 factor
INFO  16:11:48,919 - #7 )
INFO  16:11:48,919 - #3 {
INFO  16:11:48,919 - #53 this
INFO  16:11:48,919 - #34 .
INFO  16:11:48,919 - #53 factor
INFO  16:11:48,919 - #20 =
INFO  16:11:48,919 - #53 factor
INFO  16:11:48,919 - #5 ;
INFO  16:11:48,920 - #4 }
INFO  16:11:48,920 - #13 void
INFO  16:11:48,920 - #53 putp
INFO  16:11:48,920 - #6 (
INFO  16:11:48,920 - #53 int
INFO  16:11:48,920 - #53 a
INFO  16:11:48,920 - #11 ,
INFO  16:11:48,920 - #53 int
INFO  16:11:48,920 - #53 idx
INFO  16:11:48,920 - #7 )
INFO  16:11:48,920 - #3 {
INFO  16:11:48,920 - #53 this
INFO  16:11:48,921 - #34 .
INFO  16:11:48,921 - #53 pos
INFO  16:11:48,921 - #22 [
INFO  16:11:48,921 - #53 idx
INFO  16:11:48,921 - #23 ]
INFO  16:11:48,921 - #20 =
INFO  16:11:48,921 - #53 a
INFO  16:11:48,921 - #5 ;
INFO  16:11:48,921 - #4 }
INFO  16:11:48,921 - #13 void
INFO  16:11:48,921 - #53 putn
INFO  16:11:48,921 - #6 (
INFO  16:11:48,922 - #53 int
INFO  16:11:48,922 - #53 a
INFO  16:11:48,922 - #11 ,
INFO  16:11:48,923 - #53 int
INFO  16:11:48,923 - #53 idx
INFO  16:11:48,923 - #7 )
INFO  16:11:48,923 - #3 {
INFO  16:11:48,923 - #53 this
INFO  16:11:48,923 - #34 .
INFO  16:11:48,923 - #53 neg
INFO  16:11:48,923 - #22 [
INFO  16:11:48,923 - #53 idx
INFO  16:11:48,923 - #23 ]
INFO  16:11:48,923 - #20 =
INFO  16:11:48,923 - #53 a
INFO  16:11:48,923 - #5 ;
INFO  16:11:48,924 - #4 }
INFO  16:11:48,924 - #53 int
INFO  16:11:48,924 - #53 getp
INFO  16:11:48,924 - #6 (
INFO  16:11:48,924 - #53 int
INFO  16:11:48,924 - #53 idx
INFO  16:11:48,924 - #7 )
INFO  16:11:48,925 - #3 {
INFO  16:11:48,925 - #9 return
INFO  16:11:48,925 - #53 pos
INFO  16:11:48,925 - #22 [
INFO  16:11:48,925 - #53 idx
INFO  16:11:48,925 - #23 ]
INFO  16:11:48,925 - #5 ;
INFO  16:11:48,926 - #4 }
INFO  16:11:48,926 - #53 int
INFO  16:11:48,926 - #53 getn
INFO  16:11:48,926 - #6 (
INFO  16:11:48,926 - #53 int
INFO  16:11:48,926 - #53 idx
INFO  16:11:48,926 - #7 )
INFO  16:11:48,926 - #3 {
INFO  16:11:48,927 - #9 return
INFO  16:11:48,927 - #53 neg
INFO  16:11:48,927 - #22 [
INFO  16:11:48,927 - #53 idx
INFO  16:11:48,927 - #23 ]
INFO  16:11:48,927 - #5 ;
INFO  16:11:48,927 - #4 }
INFO  16:11:48,927 - #13 void
INFO  16:11:48,928 - #53 main
INFO  16:11:48,928 - #6 (
INFO  16:11:48,928 - #7 )
INFO  16:11:48,929 - #53 int
INFO  16:11:48,930 - #53 x
INFO  16:11:48,930 - #11 ,
INFO  16:11:48,930 - #53 i
INFO  16:11:48,930 - #5 ;
INFO  16:11:48,930 - #53 char
INFO  16:11:48,930 - #53 c
INFO  16:11:48,930 - #5 ;
INFO  16:11:48,931 - #53 int
INFO  16:11:48,931 - #53 arr
INFO  16:11:48,931 - #22 [
INFO  16:11:48,931 - #23 ]
INFO  16:11:48,931 - #5 ;
INFO  16:11:48,931 - #3 {
INFO  16:11:48,931 - #15 if
INFO  16:11:48,931 - #6 (
INFO  16:11:48,931 - #17 6
INFO  16:11:48,931 - #7 )
INFO  16:11:48,932 - #3 {
INFO  16:11:48,932 - #53 val
INFO  16:11:48,932 - #34 .
INFO  16:11:48,932 - #53 setfactor
INFO  16:11:48,932 - #6 (
INFO  16:11:48,932 - #17 2
INFO  16:11:48,933 - #7 )
INFO  16:11:48,933 - #5 ;
INFO  16:11:48,933 - #4 }
INFO  16:11:48,933 - #16 else
INFO  16:11:48,933 - #3 {
INFO  16:11:48,933 - #53 arr
INFO  16:11:48,933 - #20 =
INFO  16:11:48,933 - #33 new
INFO  16:11:48,933 - #53 int
INFO  16:11:48,933 - #22 [
INFO  16:11:48,933 - #17 3
INFO  16:11:48,933 - #23 ]
INFO  16:11:48,934 - #5 ;
INFO  16:11:48,934 - #4 }
INFO  16:11:48,934 - #15 if
INFO  16:11:48,934 - #6 (
INFO  16:11:48,934 - #53 x
INFO  16:11:48,934 - #40 <=
ERROR 16:11:48,934 - 
Sintaksna greska na liniji 42
INFO  16:11:48,934 - #17 0
INFO  16:11:48,936 - #7 )
INFO  16:11:48,937 - #26 read
INFO  16:11:48,938 - #6 (
INFO  16:11:48,938 - #53 x
INFO  16:11:48,938 - #7 )
INFO  16:11:48,938 - #5 ;
INFO  16:11:48,938 - #15 if
INFO  16:11:48,938 - #6 (
INFO  16:11:48,939 - #17 0
ERROR 16:11:48,939 - Izvrsen oporavak do ; u liniji 42
INFO  16:11:48,940 - #40 <=
ERROR 16:11:48,941 - 
Sintaksna greska na liniji 43
INFO  16:11:48,941 - #53 x
INFO  16:11:48,941 - #31 &&
INFO  16:11:48,941 - #53 x
INFO  16:11:48,941 - #39 <
INFO  16:11:48,941 - #53 i
INFO  16:11:48,941 - #7 )
INFO  16:11:48,941 - #3 {
INFO  16:11:48,941 - #53 val
INFO  16:11:48,941 - #34 .
INFO  16:11:48,941 - #53 putp
INFO  16:11:48,941 - #6 (
INFO  16:11:48,942 - #53 val
INFO  16:11:48,942 - #34 .
INFO  16:11:48,942 - #53 getp
INFO  16:11:48,942 - #6 (
INFO  16:11:48,942 - #53 x
INFO  16:11:48,942 - #7 )
INFO  16:11:48,942 - #10 +
INFO  16:11:48,942 - #17 1
INFO  16:11:48,942 - #7 )
INFO  16:11:48,942 - #5 ;
INFO  16:11:48,942 - #4 }
INFO  16:11:48,942 - #16 else
INFO  16:11:48,942 - #15 if
INFO  16:11:48,942 - #6 (
INFO  16:11:48,942 - #53 i
INFO  16:11:48,942 - #39 <
INFO  16:11:48,942 - #53 x
INFO  16:11:48,942 - #31 &&
INFO  16:11:48,943 - #53 x
INFO  16:11:48,943 - #39 <
INFO  16:11:48,943 - #17 0
INFO  16:11:48,943 - #7 )
INFO  16:11:48,943 - #3 {
INFO  16:11:48,943 - #53 val
INFO  16:11:48,943 - #34 .
INFO  16:11:48,943 - #53 putn
INFO  16:11:48,943 - #6 (
INFO  16:11:48,943 - #53 val
INFO  16:11:48,943 - #34 .
INFO  16:11:48,943 - #53 getn
INFO  16:11:48,943 - #6 (
INFO  16:11:48,943 - #32 -
INFO  16:11:48,943 - #53 x
INFO  16:11:48,943 - #7 )
INFO  16:11:48,943 - #10 +
INFO  16:11:48,943 - #17 1
INFO  16:11:48,944 - #7 )
INFO  16:11:48,944 - #5 ;
INFO  16:11:48,944 - #4 }
INFO  16:11:48,944 - #53 i
INFO  16:11:48,944 - #20 =
ERROR 16:11:48,944 - Izvrsen oporavak do ; u liniji 43
ERROR 16:11:48,944 - 
Sintaksna greska na liniji 51
ERROR 16:11:48,944 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 51
