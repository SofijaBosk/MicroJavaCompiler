INFO  16:05:36,672 - Compiling source file: C:\Users\sofij\Documents\Faks\7semestar\pp1\Projekat\Projekat 20232024\Domaci\workspace\MJCompiler\test\test1.mj
INFO  16:05:36,830 - #2 program
INFO  16:05:36,830 - #53 MJProgram
INFO  16:05:36,830 - #48 namespace
INFO  16:05:36,832 - #53 sizes
INFO  16:05:36,832 - #3 {
INFO  16:05:36,832 - #21 const
INFO  16:05:36,834 - #53 int
INFO  16:05:36,834 - #53 tableSize
INFO  16:05:36,835 - #20 =
INFO  16:05:36,835 - #17 10
INFO  16:05:36,836 - #5 ;
INFO  16:05:36,836 - #3 {
INFO  16:05:36,838 - #4 }
INFO  16:05:36,839 - #4 }
INFO  16:05:36,839 - #24 class
INFO  16:05:36,839 - #53 Table
INFO  16:05:36,839 - #3 {
INFO  16:05:36,840 - #53 int
INFO  16:05:36,842 - #53 pos
INFO  16:05:36,843 - #22 [
INFO  16:05:36,843 - #23 ]
INFO  16:05:36,843 - #11 ,
INFO  16:05:36,843 - #53 neg
INFO  16:05:36,843 - #22 [
INFO  16:05:36,843 - #23 ]
INFO  16:05:36,843 - #11 ,
INFO  16:05:36,844 - #53 factor
INFO  16:05:36,844 - #5 ;
INFO  16:05:36,844 - #3 {
INFO  16:05:36,845 - #13 void
INFO  16:05:36,845 - #53 setfactor
INFO  16:05:36,846 - #6 (
INFO  16:05:36,847 - #53 int
INFO  16:05:36,847 - #53 factor
INFO  16:05:36,847 - #7 )
INFO  16:05:36,848 - #3 {
INFO  16:05:36,848 - #53 this
INFO  16:05:36,849 - #34 .
INFO  16:05:36,850 - #53 factor
INFO  16:05:36,850 - #20 =
INFO  16:05:36,851 - #53 factor
INFO  16:05:36,853 - #5 ;
INFO  16:05:36,853 - #4 }
INFO  16:05:36,854 - #13 void
INFO  16:05:36,855 - #53 putp
INFO  16:05:36,855 - #6 (
INFO  16:05:36,855 - #53 int
INFO  16:05:36,855 - #53 a
INFO  16:05:36,856 - #11 ,
INFO  16:05:36,856 - #53 int
INFO  16:05:36,856 - #53 idx
INFO  16:05:36,856 - #7 )
INFO  16:05:36,856 - #3 {
INFO  16:05:36,856 - #53 this
INFO  16:05:36,856 - #34 .
INFO  16:05:36,856 - #53 pos
INFO  16:05:36,856 - #22 [
INFO  16:05:36,856 - #53 idx
INFO  16:05:36,857 - #23 ]
INFO  16:05:36,857 - #20 =
INFO  16:05:36,857 - #53 a
INFO  16:05:36,857 - #5 ;
INFO  16:05:36,857 - #4 }
INFO  16:05:36,857 - #13 void
INFO  16:05:36,857 - #53 putn
INFO  16:05:36,857 - #6 (
INFO  16:05:36,857 - #53 int
INFO  16:05:36,858 - #53 a
INFO  16:05:36,858 - #11 ,
INFO  16:05:36,858 - #53 int
INFO  16:05:36,858 - #53 idx
INFO  16:05:36,858 - #7 )
INFO  16:05:36,858 - #3 {
INFO  16:05:36,858 - #53 this
INFO  16:05:36,858 - #34 .
INFO  16:05:36,858 - #53 neg
INFO  16:05:36,858 - #22 [
INFO  16:05:36,858 - #53 idx
INFO  16:05:36,858 - #23 ]
INFO  16:05:36,859 - #20 =
INFO  16:05:36,859 - #53 a
INFO  16:05:36,859 - #5 ;
INFO  16:05:36,859 - #4 }
INFO  16:05:36,859 - #53 int
INFO  16:05:36,859 - #53 getp
INFO  16:05:36,859 - #6 (
INFO  16:05:36,860 - #53 int
INFO  16:05:36,860 - #53 idx
INFO  16:05:36,860 - #7 )
INFO  16:05:36,860 - #3 {
INFO  16:05:36,860 - #9 return
INFO  16:05:36,860 - #53 pos
INFO  16:05:36,860 - #22 [
INFO  16:05:36,860 - #53 idx
INFO  16:05:36,860 - #23 ]
INFO  16:05:36,860 - #5 ;
INFO  16:05:36,860 - #4 }
INFO  16:05:36,861 - #53 int
INFO  16:05:36,861 - #53 getn
INFO  16:05:36,861 - #6 (
INFO  16:05:36,861 - #53 int
INFO  16:05:36,861 - #53 idx
INFO  16:05:36,861 - #7 )
INFO  16:05:36,861 - #3 {
INFO  16:05:36,861 - #9 return
INFO  16:05:36,861 - #53 neg
INFO  16:05:36,861 - #22 [
INFO  16:05:36,861 - #53 idx
INFO  16:05:36,861 - #23 ]
INFO  16:05:36,862 - #5 ;
INFO  16:05:36,862 - #4 }
INFO  16:05:36,862 - #4 }
INFO  16:05:36,862 - #4 }
INFO  16:05:36,862 - #53 int
INFO  16:05:36,862 - #53 x
INFO  16:05:36,862 - #5 ;
INFO  16:05:36,863 - #53 int
INFO  16:05:36,863 - #53 y
INFO  16:05:36,863 - #5 ;
INFO  16:05:36,863 - #53 int
INFO  16:05:36,863 - #53 rows
INFO  16:05:36,863 - #11 ,
INFO  16:05:36,863 - #53 columns
INFO  16:05:36,863 - #5 ;
INFO  16:05:36,863 - #3 {
INFO  16:05:36,863 - #13 void
INFO  16:05:36,864 - #53 setfactor
INFO  16:05:36,864 - #6 (
INFO  16:05:36,864 - #53 int
INFO  16:05:36,864 - #53 factor
INFO  16:05:36,864 - #7 )
INFO  16:05:36,864 - #3 {
INFO  16:05:36,864 - #53 this
INFO  16:05:36,864 - #34 .
INFO  16:05:36,864 - #53 factor
INFO  16:05:36,864 - #20 =
INFO  16:05:36,865 - #53 factor
INFO  16:05:36,865 - #5 ;
INFO  16:05:36,865 - #4 }
INFO  16:05:36,865 - #13 void
INFO  16:05:36,866 - #53 putp
INFO  16:05:36,866 - #6 (
INFO  16:05:36,866 - #53 int
INFO  16:05:36,866 - #53 a
INFO  16:05:36,866 - #11 ,
INFO  16:05:36,866 - #53 int
INFO  16:05:36,866 - #53 idx
INFO  16:05:36,866 - #7 )
INFO  16:05:36,866 - #3 {
INFO  16:05:36,866 - #53 this
INFO  16:05:36,866 - #34 .
INFO  16:05:36,866 - #53 pos
INFO  16:05:36,866 - #22 [
INFO  16:05:36,867 - #53 idx
INFO  16:05:36,867 - #23 ]
INFO  16:05:36,867 - #20 =
INFO  16:05:36,867 - #53 a
INFO  16:05:36,867 - #5 ;
INFO  16:05:36,867 - #4 }
INFO  16:05:36,867 - #13 void
INFO  16:05:36,867 - #53 putn
INFO  16:05:36,867 - #6 (
INFO  16:05:36,867 - #53 int
INFO  16:05:36,867 - #53 a
INFO  16:05:36,868 - #11 ,
INFO  16:05:36,868 - #53 int
INFO  16:05:36,868 - #53 idx
INFO  16:05:36,868 - #7 )
INFO  16:05:36,869 - #3 {
INFO  16:05:36,869 - #53 this
INFO  16:05:36,869 - #34 .
INFO  16:05:36,869 - #53 neg
INFO  16:05:36,869 - #22 [
INFO  16:05:36,869 - #53 idx
INFO  16:05:36,869 - #23 ]
INFO  16:05:36,869 - #20 =
INFO  16:05:36,869 - #53 a
INFO  16:05:36,869 - #5 ;
INFO  16:05:36,869 - #4 }
INFO  16:05:36,869 - #53 int
INFO  16:05:36,869 - #53 getp
INFO  16:05:36,870 - #6 (
INFO  16:05:36,870 - #53 int
INFO  16:05:36,870 - #53 idx
INFO  16:05:36,870 - #7 )
INFO  16:05:36,870 - #3 {
INFO  16:05:36,870 - #9 return
INFO  16:05:36,870 - #53 pos
INFO  16:05:36,870 - #22 [
INFO  16:05:36,870 - #53 idx
INFO  16:05:36,870 - #23 ]
INFO  16:05:36,870 - #5 ;
INFO  16:05:36,870 - #4 }
INFO  16:05:36,870 - #53 int
INFO  16:05:36,871 - #53 getn
INFO  16:05:36,871 - #6 (
INFO  16:05:36,871 - #53 int
INFO  16:05:36,871 - #53 idx
INFO  16:05:36,871 - #7 )
INFO  16:05:36,871 - #3 {
INFO  16:05:36,871 - #9 return
INFO  16:05:36,871 - #53 neg
INFO  16:05:36,871 - #22 [
INFO  16:05:36,871 - #53 idx
INFO  16:05:36,871 - #23 ]
INFO  16:05:36,871 - #5 ;
INFO  16:05:36,871 - #4 }
INFO  16:05:36,871 - #13 void
INFO  16:05:36,871 - #53 main
INFO  16:05:36,872 - #6 (
INFO  16:05:36,872 - #7 )
INFO  16:05:36,873 - #53 int
INFO  16:05:36,873 - #53 x
INFO  16:05:36,873 - #11 ,
INFO  16:05:36,873 - #53 i
INFO  16:05:36,873 - #5 ;
INFO  16:05:36,873 - #53 char
INFO  16:05:36,873 - #53 c
INFO  16:05:36,873 - #5 ;
INFO  16:05:36,873 - #53 int
INFO  16:05:36,873 - #53 arr
INFO  16:05:36,873 - #22 [
INFO  16:05:36,874 - #23 ]
INFO  16:05:36,874 - #5 ;
INFO  16:05:36,874 - #3 {
INFO  16:05:36,874 - #15 if
INFO  16:05:36,874 - #6 (
INFO  16:05:36,874 - #53 x
INFO  16:05:36,874 - #35 ==
ERROR 16:05:36,874 - 
Sintaksna greska na liniji 34
INFO  16:05:36,874 - #17 1
INFO  16:05:36,874 - #7 )
INFO  16:05:36,874 - #3 {
INFO  16:05:36,875 - #53 val
INFO  16:05:36,875 - #34 .
INFO  16:05:36,875 - #53 setfactor
INFO  16:05:36,875 - #6 (
INFO  16:05:36,876 - #17 2
INFO  16:05:36,876 - #7 )
INFO  16:05:36,876 - #5 ;
INFO  16:05:36,876 - #4 }
INFO  16:05:36,876 - #16 else
INFO  16:05:36,876 - #3 {
INFO  16:05:36,876 - #53 arr
INFO  16:05:36,876 - #20 =
INFO  16:05:36,876 - #33 new
INFO  16:05:36,876 - #53 int
INFO  16:05:36,876 - #22 [
INFO  16:05:36,876 - #17 3
INFO  16:05:36,876 - #23 ]
INFO  16:05:36,876 - #5 ;
INFO  16:05:36,876 - #4 }
INFO  16:05:36,876 - #53 i
INFO  16:05:36,876 - #20 =
ERROR 16:05:36,877 - Izvrsen oporavak do ; u liniji 34
ERROR 16:05:36,878 - 
Sintaksna greska na liniji 40
ERROR 16:05:36,878 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 40
