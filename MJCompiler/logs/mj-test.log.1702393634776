INFO  16:06:41,902 - Compiling source file: C:\Users\sofij\Documents\Faks\7semestar\pp1\Projekat\Projekat 20232024\Domaci\workspace\MJCompiler\test\test1.mj
INFO  16:06:42,081 - #2 program
INFO  16:06:42,081 - #53 MJProgram
INFO  16:06:42,081 - #48 namespace
INFO  16:06:42,083 - #53 sizes
INFO  16:06:42,083 - #3 {
INFO  16:06:42,083 - #21 const
INFO  16:06:42,084 - #53 int
INFO  16:06:42,085 - #53 tableSize
INFO  16:06:42,086 - #20 =
INFO  16:06:42,086 - #17 10
INFO  16:06:42,087 - #5 ;
INFO  16:06:42,087 - #3 {
INFO  16:06:42,089 - #4 }
INFO  16:06:42,090 - #4 }
INFO  16:06:42,090 - #24 class
INFO  16:06:42,091 - #53 Table
INFO  16:06:42,091 - #3 {
INFO  16:06:42,092 - #53 int
INFO  16:06:42,094 - #53 pos
INFO  16:06:42,095 - #22 [
INFO  16:06:42,095 - #23 ]
INFO  16:06:42,095 - #11 ,
INFO  16:06:42,095 - #53 neg
INFO  16:06:42,095 - #22 [
INFO  16:06:42,095 - #23 ]
INFO  16:06:42,095 - #11 ,
INFO  16:06:42,096 - #53 factor
INFO  16:06:42,096 - #5 ;
INFO  16:06:42,096 - #3 {
INFO  16:06:42,097 - #13 void
INFO  16:06:42,098 - #53 setfactor
INFO  16:06:42,099 - #6 (
INFO  16:06:42,100 - #53 int
INFO  16:06:42,100 - #53 factor
INFO  16:06:42,100 - #7 )
INFO  16:06:42,100 - #3 {
INFO  16:06:42,100 - #53 this
INFO  16:06:42,102 - #34 .
INFO  16:06:42,103 - #53 factor
INFO  16:06:42,103 - #20 =
INFO  16:06:42,103 - #53 factor
INFO  16:06:42,105 - #5 ;
INFO  16:06:42,106 - #4 }
INFO  16:06:42,106 - #13 void
INFO  16:06:42,108 - #53 putp
INFO  16:06:42,108 - #6 (
INFO  16:06:42,108 - #53 int
INFO  16:06:42,108 - #53 a
INFO  16:06:42,108 - #11 ,
INFO  16:06:42,108 - #53 int
INFO  16:06:42,108 - #53 idx
INFO  16:06:42,108 - #7 )
INFO  16:06:42,108 - #3 {
INFO  16:06:42,109 - #53 this
INFO  16:06:42,109 - #34 .
INFO  16:06:42,109 - #53 pos
INFO  16:06:42,109 - #22 [
INFO  16:06:42,109 - #53 idx
INFO  16:06:42,109 - #23 ]
INFO  16:06:42,109 - #20 =
INFO  16:06:42,109 - #53 a
INFO  16:06:42,110 - #5 ;
INFO  16:06:42,110 - #4 }
INFO  16:06:42,110 - #13 void
INFO  16:06:42,110 - #53 putn
INFO  16:06:42,110 - #6 (
INFO  16:06:42,110 - #53 int
INFO  16:06:42,110 - #53 a
INFO  16:06:42,110 - #11 ,
INFO  16:06:42,110 - #53 int
INFO  16:06:42,110 - #53 idx
INFO  16:06:42,110 - #7 )
INFO  16:06:42,111 - #3 {
INFO  16:06:42,111 - #53 this
INFO  16:06:42,111 - #34 .
INFO  16:06:42,111 - #53 neg
INFO  16:06:42,111 - #22 [
INFO  16:06:42,111 - #53 idx
INFO  16:06:42,111 - #23 ]
INFO  16:06:42,111 - #20 =
INFO  16:06:42,111 - #53 a
INFO  16:06:42,111 - #5 ;
INFO  16:06:42,111 - #4 }
INFO  16:06:42,111 - #53 int
INFO  16:06:42,112 - #53 getp
INFO  16:06:42,112 - #6 (
INFO  16:06:42,112 - #53 int
INFO  16:06:42,112 - #53 idx
INFO  16:06:42,112 - #7 )
INFO  16:06:42,112 - #3 {
INFO  16:06:42,112 - #9 return
INFO  16:06:42,112 - #53 pos
INFO  16:06:42,112 - #22 [
INFO  16:06:42,113 - #53 idx
INFO  16:06:42,113 - #23 ]
INFO  16:06:42,113 - #5 ;
INFO  16:06:42,113 - #4 }
INFO  16:06:42,113 - #53 int
INFO  16:06:42,113 - #53 getn
INFO  16:06:42,113 - #6 (
INFO  16:06:42,113 - #53 int
INFO  16:06:42,113 - #53 idx
INFO  16:06:42,114 - #7 )
INFO  16:06:42,114 - #3 {
INFO  16:06:42,114 - #9 return
INFO  16:06:42,114 - #53 neg
INFO  16:06:42,114 - #22 [
INFO  16:06:42,114 - #53 idx
INFO  16:06:42,114 - #23 ]
INFO  16:06:42,114 - #5 ;
INFO  16:06:42,114 - #4 }
INFO  16:06:42,114 - #4 }
INFO  16:06:42,115 - #4 }
INFO  16:06:42,115 - #53 int
INFO  16:06:42,115 - #53 x
INFO  16:06:42,115 - #5 ;
INFO  16:06:42,115 - #53 int
INFO  16:06:42,115 - #53 y
INFO  16:06:42,115 - #5 ;
INFO  16:06:42,116 - #53 int
INFO  16:06:42,116 - #53 rows
INFO  16:06:42,116 - #11 ,
INFO  16:06:42,116 - #53 columns
INFO  16:06:42,116 - #5 ;
INFO  16:06:42,116 - #3 {
INFO  16:06:42,116 - #13 void
INFO  16:06:42,116 - #53 setfactor
INFO  16:06:42,116 - #6 (
INFO  16:06:42,116 - #53 int
INFO  16:06:42,116 - #53 factor
INFO  16:06:42,116 - #7 )
INFO  16:06:42,117 - #3 {
INFO  16:06:42,117 - #53 this
INFO  16:06:42,117 - #34 .
INFO  16:06:42,117 - #53 factor
INFO  16:06:42,117 - #20 =
INFO  16:06:42,117 - #53 factor
INFO  16:06:42,117 - #5 ;
INFO  16:06:42,117 - #4 }
INFO  16:06:42,117 - #13 void
INFO  16:06:42,118 - #53 putp
INFO  16:06:42,118 - #6 (
INFO  16:06:42,118 - #53 int
INFO  16:06:42,118 - #53 a
INFO  16:06:42,118 - #11 ,
INFO  16:06:42,118 - #53 int
INFO  16:06:42,118 - #53 idx
INFO  16:06:42,118 - #7 )
INFO  16:06:42,118 - #3 {
INFO  16:06:42,118 - #53 this
INFO  16:06:42,118 - #34 .
INFO  16:06:42,118 - #53 pos
INFO  16:06:42,118 - #22 [
INFO  16:06:42,119 - #53 idx
INFO  16:06:42,119 - #23 ]
INFO  16:06:42,119 - #20 =
INFO  16:06:42,119 - #53 a
INFO  16:06:42,119 - #5 ;
INFO  16:06:42,119 - #4 }
INFO  16:06:42,119 - #13 void
INFO  16:06:42,119 - #53 putn
INFO  16:06:42,119 - #6 (
INFO  16:06:42,119 - #53 int
INFO  16:06:42,119 - #53 a
INFO  16:06:42,120 - #11 ,
INFO  16:06:42,120 - #53 int
INFO  16:06:42,120 - #53 idx
INFO  16:06:42,120 - #7 )
INFO  16:06:42,120 - #3 {
INFO  16:06:42,120 - #53 this
INFO  16:06:42,121 - #34 .
INFO  16:06:42,121 - #53 neg
INFO  16:06:42,121 - #22 [
INFO  16:06:42,121 - #53 idx
INFO  16:06:42,121 - #23 ]
INFO  16:06:42,121 - #20 =
INFO  16:06:42,121 - #53 a
INFO  16:06:42,121 - #5 ;
INFO  16:06:42,121 - #4 }
INFO  16:06:42,121 - #53 int
INFO  16:06:42,121 - #53 getp
INFO  16:06:42,121 - #6 (
INFO  16:06:42,121 - #53 int
INFO  16:06:42,122 - #53 idx
INFO  16:06:42,122 - #7 )
INFO  16:06:42,122 - #3 {
INFO  16:06:42,122 - #9 return
INFO  16:06:42,122 - #53 pos
INFO  16:06:42,122 - #22 [
INFO  16:06:42,122 - #53 idx
INFO  16:06:42,122 - #23 ]
INFO  16:06:42,122 - #5 ;
INFO  16:06:42,122 - #4 }
INFO  16:06:42,122 - #53 int
INFO  16:06:42,122 - #53 getn
INFO  16:06:42,122 - #6 (
INFO  16:06:42,122 - #53 int
INFO  16:06:42,123 - #53 idx
INFO  16:06:42,123 - #7 )
INFO  16:06:42,123 - #3 {
INFO  16:06:42,123 - #9 return
INFO  16:06:42,123 - #53 neg
INFO  16:06:42,123 - #22 [
INFO  16:06:42,123 - #53 idx
INFO  16:06:42,123 - #23 ]
INFO  16:06:42,123 - #5 ;
INFO  16:06:42,123 - #4 }
INFO  16:06:42,123 - #13 void
INFO  16:06:42,123 - #53 main
INFO  16:06:42,123 - #6 (
INFO  16:06:42,123 - #7 )
INFO  16:06:42,125 - #53 int
INFO  16:06:42,125 - #53 x
INFO  16:06:42,125 - #11 ,
INFO  16:06:42,125 - #53 i
INFO  16:06:42,125 - #5 ;
INFO  16:06:42,125 - #53 char
INFO  16:06:42,125 - #53 c
INFO  16:06:42,125 - #5 ;
INFO  16:06:42,125 - #53 int
INFO  16:06:42,125 - #53 arr
INFO  16:06:42,125 - #22 [
INFO  16:06:42,125 - #23 ]
INFO  16:06:42,126 - #5 ;
INFO  16:06:42,126 - #3 {
INFO  16:06:42,126 - #15 if
INFO  16:06:42,126 - #6 (
INFO  16:06:42,126 - #53 x
INFO  16:06:42,126 - #35 ==
ERROR 16:06:42,126 - 
Sintaksna greska na liniji 34
INFO  16:06:42,126 - #17 1
INFO  16:06:42,126 - #7 )
INFO  16:06:42,126 - #3 {
INFO  16:06:42,127 - #53 val
INFO  16:06:42,127 - #34 .
INFO  16:06:42,127 - #53 setfactor
INFO  16:06:42,127 - #6 (
INFO  16:06:42,127 - #17 2
INFO  16:06:42,127 - #7 )
INFO  16:06:42,128 - #5 ;
INFO  16:06:42,128 - #4 }
INFO  16:06:42,128 - #16 else
INFO  16:06:42,128 - #3 {
INFO  16:06:42,128 - #53 arr
INFO  16:06:42,128 - #20 =
INFO  16:06:42,128 - #33 new
INFO  16:06:42,128 - #53 int
INFO  16:06:42,128 - #22 [
INFO  16:06:42,128 - #17 3
INFO  16:06:42,128 - #23 ]
INFO  16:06:42,128 - #5 ;
INFO  16:06:42,128 - #4 }
INFO  16:06:42,128 - #53 i
INFO  16:06:42,128 - #20 =
ERROR 16:06:42,128 - Izvrsen oporavak do ; u liniji 34
ERROR 16:06:42,130 - 
Sintaksna greska na liniji 40
ERROR 16:06:42,130 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 40
