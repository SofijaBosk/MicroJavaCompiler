INFO  12:59:28,458 - Compiling source file: C:\Users\sofij\Documents\Faks\7semestar\pp1\Projekat\Projekat final\workspace\MJCompiler\test\primerSaSajta.mj
INFO  12:59:28,470 - #2 program
INFO  12:59:28,470 - #15 p
INFO  12:59:28,470 - #15 const
INFO  12:59:28,471 - #15 int
INFO  12:59:28,471 - #15 size
INFO  12:59:28,471 - #8 =
INFO  12:59:28,471 - #14 10
INFO  12:59:28,471 - #5 ;
INFO  12:59:28,472 - #15 class
INFO  12:59:28,472 - #15 Table
INFO  12:59:28,472 - #3 {
INFO  12:59:28,472 - #15 int
INFO  12:59:28,472 - #15 pos
INFO  12:59:28,473 - #11 ,
INFO  12:59:28,473 - #15 neg
INFO  12:59:28,473 - #11 ,
INFO  12:59:28,474 - #15 factor
INFO  12:59:28,474 - #5 ;
INFO  12:59:28,474 - #3 {
INFO  12:59:28,474 - #15 Table
INFO  12:59:28,480 - #6 (
INFO  12:59:28,481 - #15 int
INFO  12:59:28,481 - #15 factor
INFO  12:59:28,481 - #7 )
INFO  12:59:28,482 - #3 {
INFO  12:59:28,482 - #15 this
INFO  12:59:28,482 - #15 factor
INFO  12:59:28,482 - #8 =
INFO  12:59:28,482 - #15 factor
INFO  12:59:28,483 - #5 ;
INFO  12:59:28,483 - #4 }
INFO  12:59:28,483 - #13 void
INFO  12:59:28,483 - #15 putp
INFO  12:59:28,483 - #6 (
INFO  12:59:28,483 - #15 int
INFO  12:59:28,483 - #15 a
INFO  12:59:28,483 - #11 ,
INFO  12:59:28,484 - #15 int
INFO  12:59:28,484 - #15 idx
INFO  12:59:28,484 - #7 )
INFO  12:59:28,484 - #3 {
INFO  12:59:28,485 - #15 this
INFO  12:59:28,485 - #15 pos
INFO  12:59:28,485 - #15 idx
INFO  12:59:28,486 - #8 =
INFO  12:59:28,486 - #15 a
INFO  12:59:28,486 - #5 ;
INFO  12:59:28,487 - #4 }
INFO  12:59:28,487 - #13 void
INFO  12:59:28,487 - #15 putn
INFO  12:59:28,487 - #6 (
INFO  12:59:28,488 - #15 int
INFO  12:59:28,488 - #15 a
INFO  12:59:28,488 - #11 ,
INFO  12:59:28,488 - #15 int
INFO  12:59:28,489 - #15 idx
INFO  12:59:28,489 - #7 )
INFO  12:59:28,489 - #3 {
INFO  12:59:28,490 - #15 this
INFO  12:59:28,490 - #15 neg
INFO  12:59:28,490 - #15 idx
INFO  12:59:28,491 - #8 =
INFO  12:59:28,491 - #15 a
INFO  12:59:28,491 - #5 ;
INFO  12:59:28,491 - #4 }
INFO  12:59:28,491 - #15 int
INFO  12:59:28,491 - #15 getp
INFO  12:59:28,492 - #6 (
INFO  12:59:28,492 - #15 int
INFO  12:59:28,492 - #15 idx
INFO  12:59:28,492 - #7 )
INFO  12:59:28,492 - #3 {
INFO  12:59:28,492 - #9 return
INFO  12:59:28,492 - #15 pos
INFO  12:59:28,493 - #15 idx
INFO  12:59:28,493 - #5 ;
INFO  12:59:28,493 - #4 }
INFO  12:59:28,493 - #15 int
INFO  12:59:28,493 - #15 getn
INFO  12:59:28,493 - #6 (
INFO  12:59:28,494 - #15 int
INFO  12:59:28,494 - #15 idx
INFO  12:59:28,494 - #7 )
INFO  12:59:28,494 - #3 {
INFO  12:59:28,494 - #9 return
INFO  12:59:28,494 - #15 neg
INFO  12:59:28,494 - #15 idx
INFO  12:59:28,495 - #5 ;
INFO  12:59:28,495 - #4 }
INFO  12:59:28,495 - #4 }
INFO  12:59:28,495 - #4 }
INFO  12:59:28,495 - #15 Table
INFO  12:59:28,495 - #15 val
INFO  12:59:28,495 - #5 ;
INFO  12:59:28,496 - #15 Int
INFO  12:59:28,496 - #15 rows
INFO  12:59:28,496 - #11 ,
INFO  12:59:28,496 - #15 columns
INFO  12:59:28,496 - #5 ;
INFO  12:59:28,497 - #3 {
INFO  12:59:28,499 - #13 void
INFO  12:59:28,500 - #15 f
INFO  12:59:28,500 - #6 (
INFO  12:59:28,500 - #15 char
INFO  12:59:28,500 - #15 ch
INFO  12:59:28,500 - #11 ,
INFO  12:59:28,500 - #15 int
INFO  12:59:28,501 - #15 a
INFO  12:59:28,501 - #11 ,
INFO  12:59:28,501 - #15 int
INFO  12:59:28,501 - #15 arg
INFO  12:59:28,501 - #7 )
INFO  12:59:28,501 - #15 int
INFO  12:59:28,501 - #15 x
INFO  12:59:28,502 - #5 ;
INFO  12:59:28,502 - #3 {
INFO  12:59:28,502 - #15 x
INFO  12:59:28,502 - #8 =
INFO  12:59:28,502 - #15 arg
INFO  12:59:28,502 - #5 ;
INFO  12:59:28,502 - #4 }
INFO  12:59:28,502 - #13 void
INFO  12:59:28,503 - #15 main
INFO  12:59:28,503 - #6 (
INFO  12:59:28,503 - #7 )
INFO  12:59:28,503 - #15 int
INFO  12:59:28,504 - #15 x
INFO  12:59:28,504 - #11 ,
INFO  12:59:28,505 - #15 i
INFO  12:59:28,505 - #5 ;
INFO  12:59:28,505 - #15 char
INFO  12:59:28,505 - #15 c
INFO  12:59:28,505 - #11 ,
INFO  12:59:28,506 - #15 int
INFO  12:59:28,506 - #15 arr
INFO  12:59:28,506 - #5 ;
INFO  12:59:28,506 - #3 {
INFO  12:59:28,507 - #15 val
INFO  12:59:28,507 - #8 =
INFO  12:59:28,508 - #15 new
INFO  12:59:28,508 - #15 Table
INFO  12:59:28,508 - #6 (
INFO  12:59:28,508 - #14 2
INFO  12:59:28,509 - #7 )
INFO  12:59:28,509 - #5 ;
INFO  12:59:28,509 - #15 arr
INFO  12:59:28,509 - #8 =
INFO  12:59:28,509 - #15 new
INFO  12:59:28,509 - #15 int
INFO  12:59:28,509 - #14 3
INFO  12:59:28,509 - #5 ;
INFO  12:59:28,509 - #15 i
INFO  12:59:28,509 - #8 =
INFO  12:59:28,509 - #14 0
INFO  12:59:28,510 - #5 ;
INFO  12:59:28,510 - #15 while
INFO  12:59:28,510 - #6 (
INFO  12:59:28,510 - #15 i
INFO  12:59:28,510 - #14 3
INFO  12:59:28,510 - #7 )
INFO  12:59:28,510 - #3 {
INFO  12:59:28,510 - #15 arr
INFO  12:59:28,511 - #15 i
INFO  12:59:28,511 - #8 =
INFO  12:59:28,511 - #15 i
INFO  12:59:28,511 - #5 ;
INFO  12:59:28,511 - #15 i
INFO  12:59:28,511 - #10 +
INFO  12:59:28,511 - #10 +
INFO  12:59:28,512 - #5 ;
INFO  12:59:28,512 - #4 }
INFO  12:59:28,512 - #15 arr
INFO  12:59:28,512 - #15 foreach
INFO  12:59:28,512 - #6 (
INFO  12:59:28,512 - #15 x
INFO  12:59:28,512 - #8 =
INFO  12:59:28,512 - #12 print
INFO  12:59:28,512 - #6 (
INFO  12:59:28,513 - #15 x
INFO  12:59:28,513 - #7 )
INFO  12:59:28,513 - #5 ;
INFO  12:59:28,513 - #7 )
INFO  12:59:28,513 - #5 ;
INFO  12:59:28,513 - #15 val
INFO  12:59:28,514 - #15 pos
INFO  12:59:28,514 - #8 =
INFO  12:59:28,514 - #15 new
INFO  12:59:28,515 - #15 int
INFO  12:59:28,516 - #15 size
INFO  12:59:28,517 - #5 ;
INFO  12:59:28,517 - #15 val
INFO  12:59:28,517 - #15 neg
INFO  12:59:28,517 - #8 =
INFO  12:59:28,517 - #15 new
INFO  12:59:28,517 - #15 int
INFO  12:59:28,517 - #15 size
INFO  12:59:28,518 - #5 ;
INFO  12:59:28,518 - #15 read
INFO  12:59:28,518 - #6 (
INFO  12:59:28,518 - #15 x
INFO  12:59:28,518 - #7 )
INFO  12:59:28,518 - #5 ;
INFO  12:59:28,518 - #15 i
INFO  12:59:28,518 - #11 ,
INFO  12:59:28,519 - #11 ,
INFO  12:59:28,519 - #15 x
INFO  12:59:28,519 - #8 =
INFO  12:59:28,519 - #15 arr
INFO  12:59:28,519 - #5 ;
INFO  12:59:28,519 - #15 while
INFO  12:59:28,519 - #6 (
INFO  12:59:28,519 - #15 i
INFO  12:59:28,519 - #15 size
INFO  12:59:28,520 - #7 )
INFO  12:59:28,520 - #3 {
INFO  12:59:28,520 - #15 val
INFO  12:59:28,520 - #15 putp
INFO  12:59:28,520 - #6 (
INFO  12:59:28,520 - #14 0
INFO  12:59:28,520 - #11 ,
INFO  12:59:28,520 - #15 i
INFO  12:59:28,520 - #7 )
INFO  12:59:28,520 - #5 ;
INFO  12:59:28,520 - #15 val
INFO  12:59:28,521 - #15 putn
INFO  12:59:28,521 - #6 (
INFO  12:59:28,521 - #14 0
INFO  12:59:28,521 - #11 ,
INFO  12:59:28,521 - #15 i
INFO  12:59:28,521 - #7 )
INFO  12:59:28,521 - #5 ;
INFO  12:59:28,521 - #15 i
INFO  12:59:28,522 - #10 +
INFO  12:59:28,522 - #10 +
INFO  12:59:28,522 - #5 ;
INFO  12:59:28,522 - #4 }
INFO  12:59:28,522 - #15 f
INFO  12:59:28,523 - #6 (
INFO  12:59:28,523 - #15 c
INFO  12:59:28,523 - #11 ,
INFO  12:59:28,523 - #15 x
INFO  12:59:28,523 - #11 ,
INFO  12:59:28,523 - #15 i
INFO  12:59:28,523 - #7 )
INFO  12:59:28,523 - #5 ;
INFO  12:59:28,523 - #15 read
INFO  12:59:28,524 - #6 (
INFO  12:59:28,524 - #15 rows
INFO  12:59:28,524 - #7 )
INFO  12:59:28,524 - #5 ;
INFO  12:59:28,524 - #15 x
INFO  12:59:28,524 - #8 =
INFO  12:59:28,524 - #15 rows
INFO  12:59:28,524 - #5 ;
INFO  12:59:28,524 - #15 while
INFO  12:59:28,525 - #6 (
INFO  12:59:28,525 - #15 true
INFO  12:59:28,525 - #7 )
INFO  12:59:28,525 - #3 {
INFO  12:59:28,525 - #15 if
INFO  12:59:28,525 - #6 (
INFO  12:59:28,525 - #15 x
INFO  12:59:28,525 - #8 =
INFO  12:59:28,525 - #14 0
INFO  12:59:28,525 - #7 )
INFO  12:59:28,525 - #15 break
INFO  12:59:28,526 - #5 ;
INFO  12:59:28,526 - #15 if
INFO  12:59:28,526 - #6 (
INFO  12:59:28,526 - #14 0
INFO  12:59:28,526 - #8 =
INFO  12:59:28,526 - #15 x
INFO  12:59:28,526 - #15 x
INFO  12:59:28,526 - #15 size
INFO  12:59:28,526 - #7 )
INFO  12:59:28,526 - #3 {
INFO  12:59:28,527 - #15 val
INFO  12:59:28,527 - #15 putp
INFO  12:59:28,527 - #6 (
INFO  12:59:28,527 - #15 val
INFO  12:59:28,527 - #15 getp
INFO  12:59:28,527 - #6 (
INFO  12:59:28,527 - #15 x
INFO  12:59:28,527 - #7 )
INFO  12:59:28,527 - #10 +
INFO  12:59:28,528 - #14 1
INFO  12:59:28,528 - #7 )
INFO  12:59:28,528 - #5 ;
INFO  12:59:28,528 - #4 }
INFO  12:59:28,528 - #15 else
INFO  12:59:28,528 - #15 if
INFO  12:59:28,528 - #6 (
INFO  12:59:28,528 - #15 size
INFO  12:59:28,528 - #15 x
INFO  12:59:28,529 - #15 x
INFO  12:59:28,529 - #14 0
INFO  12:59:28,529 - #7 )
INFO  12:59:28,529 - #3 {
INFO  12:59:28,529 - #15 val
INFO  12:59:28,529 - #15 putn
INFO  12:59:28,529 - #6 (
INFO  12:59:28,529 - #15 val
INFO  12:59:28,530 - #15 getn
INFO  12:59:28,530 - #6 (
INFO  12:59:28,531 - #15 x
INFO  12:59:28,531 - #7 )
INFO  12:59:28,531 - #10 +
INFO  12:59:28,531 - #14 1
INFO  12:59:28,531 - #7 )
INFO  12:59:28,531 - #5 ;
INFO  12:59:28,531 - #4 }
INFO  12:59:28,531 - #15 read
INFO  12:59:28,532 - #6 (
INFO  12:59:28,532 - #15 x
INFO  12:59:28,532 - #7 )
INFO  12:59:28,532 - #5 ;
INFO  12:59:28,532 - #4 }
INFO  12:59:28,532 - #4 }
INFO  12:59:28,532 - #4 }
